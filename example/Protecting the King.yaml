# В структуре "objects" перечислены объекты, 
# определенные для данного сценария. Объектами могут быть:
# игрок, неподвижные безжизненные NPC. 

# Общая вид любой структуры объекта:
# <object id>: 
#   type: <object type>
#   x: <starting position of X-axis>
#   y: <starting position of Y-axis>
# Если поля не указаны явно, то их значения инициализируются 
# значениями по умолчанию (не для всех полей существуют такие значения).
# По умолчанию поля x и y равны нулю.

# Для любого объекта определены методы, обращение к ним возможно через 
# символ определения контекста '.':
# ("bool" означает, что данный метод используется только в качестве условия)
# ("void" означает, что данный метод используется только в качестве действия) 
# -----/ bool in(x y) - возращает true, если объект находится в позиции (x, y);

objects:
 player:
  type: Dwarf
  x: 1
  y: 1
  
# События представляют собой последовательность действий,
# которые могут быть выполнены, если удовлетворяют своему условию.
# Проверка событий происходит каждый ход.
# Структура "events" задает список этих событий вместе с их определениями.

# Общий вид любой структуры события:
# <event id>
#   if: [<condition>, <condition>, ..., <condition>] 
#   title:   <window title>
#   message: <window message>
#   size: <window size>
#   image: 
#     file: <image file>
#     position: <image position>
#   items:
#     - 
#       label: <item label>
#       do: [<item action>, <item action>, ..., <item action>]
#     -
#       label: ...
#       do: ...
#     - 
#       ...
#
#   do: [<action>, <action>, ..., <action>]
#

# Если не указаны условия (структура "if"), то событие выполняется каждый ход.
# Если указаны условия, то, событие выполнится, если выполняются одновременно все условия.
# Структура "if" также может содержать вложенные последовательности. (!)
# if: [ false ] - событие выполнится, если это сделать явно (см. методы событий)
# if: [ true ] - явно указываем, что событие будет выполняться каждый ход (по умолчанию, если if не определен)
#
# Ключевое действие "or" (поле <condition>) позволяет управлять списком условий,
# разделяя список условий на две части, выполнение любой части ведет к выполнению события,
#
# Поле "title" устанавливает заголовок окна с сообщением.
#
# Полe "size" устанавливает размер этого окна, по умолчанию - "Small"
# Варианты: "Small", "Average", "Full"
#
# Поле "image" устанавливает ASCII-картинку, которая появится в окне с сообщением, по умолчанию картинка отсутствует.
# Картинка представляет собой просто текстовый файл.

# Поле "image: file" - устанавливает файл с картинкой

# Поле "image: position" - устанавливает позицию картиники, по умолчанию - вверху, над сообщением ("Top")
# Варианты: "Top", "Left".

# Поле "message" устанавливает сообщение, выводящееся, при выполнении события. Если
# это поле оставить пустым, то сообщение не выведется, при этом выполнятся действия из поля "do". (!)

# Поле "color" устанавливает цвет окна события, по умолчание "Neutral".
# Варианты: "Hostile", "Neutral"

# Методы определенные для каждого события:
# -----/ bool happened() - возвращает true, если событие уже произошло;
# -----/ bool happened(int X) - возвращает true, если событие произошло X шагов назад;
# -----/ void run() - запускает событие, независимо от его условий;

events:
  ev1:                                        
    if: [ ev1.happened()!, [player.in(1 2), or, player.in(2 1), or, player.in(2 2)]] 
    title:   "Example"                           
    size:    "Average"
    message: "Praise the gods, you came to the rescue! They are about to break into the King's chambers! Hurry up!" 
    image: 
      file: "Pikeman"
      position: "Left"
    items:                                     
       -                                    
         label: "For the King!"         
       -
         label: "I guess I'll go from here..."              
         do:    [ scenario.exit() ]  
         
  ev2:
    if: [ ev1.happened(10) ]
    title:   ""
    size:    "Small"
    message: "Suddenly you heard someone behind you..."
    do: [ ambush.run() ]
    
  ambush:
    if: [ false ]    
    size: "Average"
    image: 
      file: "Devil"
      position: "Left"
    color: "Hostile"
    message: "The king is dead... Now it's your turn to die."
    do: [ death.run() ]
    
  death: 
    if: [ false ]
    size: "Small"
    message: "You die..."
    color: "Hostile"
    do: [ scenario.exit() ]
        
# "scenario" зарезервированное имя,его нельзя 
# использовать при идентификации объектов/событий/карт.

# Зарезервированное имя "scenario" позволяет обращаться к 
# методам определенных для всего сценария:
# -----/ void exit() - выход в главное меню (подразумевает удаление всего текущего стека окон);

# Структура "maps" определяет список карт сценария.

# Общий вид структуры карты:
# <map id>
#   width:  <map width>
#   height: <map height>
#   text:   <map>

maps:
 map1:
  width: 59
  height: 18
  text: |
   ###########################################################
   #...........#.............................................#
   #...........#........#....................................#
   #.....................#...................................#
   #....####.....).)......#..................................#
   #.......#.)..)()................#####################.....#
   #).()(..#....(......................................#.....#
   #.(...).#.)(...)....##..............................#.....#
   #####........#......##..........##################..#.....#
   #...#...........................#................#..#.....#
   #...#............#..............#................#..#.....#
   #...............................#..###############..#.....#
   #...............................#...................#.....#
   #...............................#...................#.....#
   #...............................#####################.....#
   #.........................................................#
   #.........................................................#
   ###########################################################
